<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/demo',
      'pages/my',
      'pages/set',
      'pages/shopping',
      'pages/index',
      'pages/refresh',
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#000',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'white',
      backgroundColor: '#138cff'
    },
    tabBar: {
      color:"#353535",
      selectedColor:"#3cc51f",
      borderStyle:"white",
      backgroundColor:"#fff",
      // "position": "bottom",
      list: [
        {
          pagePath: "pages/demo",
          text: "首页",
          selectedColor: "#383838",
          iconPath: 'image/tabbar/shouye-01.png',
          selectedIconPath: 'image/tabbar/shouye-02.png'
        },
        {
          pagePath: "pages/my",
          text: "列表",
          selectedColor: "#383838",
          iconPath: 'image/tabbar/liebiao-01.png',
          selectedIconPath: 'image/tabbar/liebiao-02.png'
        },
        {
          pagePath: "pages/set",
          text: "购物车",
          selectedColor: "#383838",
          iconPath: 'image/tabbar/gw-01.png',
          selectedIconPath: 'image/tabbar/gw-02.png'
        },
        {
          pagePath: "pages/shopping",
          text: "设置",
          selectedColor: "#383838",
          iconPath: 'image/tabbar/set-01.png',
          selectedIconPath: 'image/tabbar/set-02.png'
        },
      ]
    }
  }

  globalData = {
    userInfo: null,
    demo:'999',
    from:{}
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
